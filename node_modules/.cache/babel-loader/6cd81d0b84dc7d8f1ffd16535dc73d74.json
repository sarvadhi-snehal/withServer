{"ast":null,"code":"var _jsxFileName = \"/Users/iblinfotech/Documents/GitHub/withServer/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [moviesList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMOvieHandler = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      let response = await fetch('https://swapi.dev/api/films');\n      let data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n\n      let movieList = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        };\n      });\n      setMovieList(movieList);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMOvieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), !isLoading && moviesList.length === 0 && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 50\n    }\n  }, \"Click on button to get movies list.\"), !isLoading && moviesList.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moviesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 48\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iblinfotech/Documents/GitHub/withServer/src/App.js"],"names":["React","useState","MoviesList","App","moviesList","setMovieList","isLoading","setIsLoading","error","setError","fetchMOvieHandler","response","fetch","data","json","ok","Error","movieList","results","map","movie","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,IAAD,CAAjC;;AACA,QAAMS,iBAAiB,GAAG,YAAW;AACnCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,UAAIE,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA1B;AACA,UAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;;AACA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACC,UAAIC,SAAS,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAG;AACvC,eAAO;AACLC,UAAAA,EAAE,EAAED,KAAK,CAACE,UADL;AAELC,UAAAA,KAAK,EAAEH,KAAK,CAACG,KAFR;AAGLC,UAAAA,WAAW,EAAEJ,KAAK,CAACK,YAHd;AAILC,UAAAA,WAAW,EAAEN,KAAK,CAACO;AAJd,SAAP;AAOD,OARe,CAAhB;AASAtB,MAAAA,YAAY,CAACY,SAAD,CAAZ;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAjBD,CAkBA,OAAMC,KAAN,EAAY;AACRC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACH;AACF,GAxBD;;AA4BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAElB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEC,CAACA,SAAD,IAAcF,UAAU,CAACyB,MAAX,KAAsB,CAApC,iBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAF3C,EAGC,CAACvB,SAAD,IAAcF,UAAU,CAACyB,MAAX,GAAoB,CAAlC,iBAAwC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEzB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHzC,CAJF,CADF;AAYD;;AAED,eAAeD,GAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [moviesList,setMovieList] = useState([]);\n  const [isLoading,setIsLoading] = useState(false);\n  const [error,setError] = useState(null)\n  const fetchMOvieHandler = async() => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let response = await fetch('https://swapi.dev/api/films')\n      let data = await response.json()\n      if(!response.ok){\n        throw new Error(\"something went wrong\")\n      }\n        let movieList = data.results.map(movie =>{\n          return {\n            id: movie.episode_id,\n            title: movie.title,\n            releaseDate: movie.release_date,\n            openingText: movie.opening_crawl,\n        }\n    \n        })\n        setMovieList(movieList)\n        setIsLoading(false)\n    }\n    catch(error){\n        setError(error.message)\n    }\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMOvieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {isLoading && <h1>Loading...</h1>}\n     { !isLoading && moviesList.length === 0  && <h1>Click on button to get movies list.</h1>}\n     { !isLoading && moviesList.length > 0 &&  <MoviesList movies={moviesList} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}